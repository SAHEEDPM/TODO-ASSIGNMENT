{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","text","type","id","key","value","onChange","e","setUpdate","target","icon","onClick","deleteItem","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,I,0BCsBAA,MAlBf,SAAmBC,GACf,IACMC,EADMD,EAAME,MACIC,KAAI,SAAAC,GAElB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BAAID,EAAKE,KACT,uBAAOC,KAAK,OAAOC,GAAIJ,EAAKK,IAAKC,MAAON,EAAKE,KAC7CK,SAAU,SAACC,GAAKZ,EAAMa,UAAUD,EAAEE,OAAOJ,MAAON,EAAKK,QACrD,+BACI,cAAC,IAAD,CAAiBJ,UAAU,UAAUU,KAAK,QAC1CC,QAAS,kBAAIhB,EAAMiB,WAAWb,EAAKK,cANTL,EAAKK,QAU/C,OACI,8BAAMR,K,eCXdiB,IAAQC,IAAIC,K,IA2EGC,E,kDAxEb,WAAYrB,GAAO,IAAD,8BAChB,cAAMA,IACDsB,MAAM,CACTpB,MAAM,GACNqB,YAAY,CACVjB,KAAK,GACLG,IAAI,KAGR,EAAKe,YAAY,EAAKA,YAAYC,KAAjB,gBACjB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBACb,EAAKR,WAAW,EAAKA,WAAWQ,KAAhB,gBAChB,EAAKZ,UAAU,EAAKA,UAAUY,KAAf,gBAZC,E,+CAclB,SAAYb,GACVe,KAAKC,SAAS,CACZL,YAAY,CACVjB,KAAKM,EAAEE,OAAOJ,MACdD,IAAIoB,KAAKC,W,qBAIf,SAAQlB,GACVA,EAAEmB,iBACF,IAAMC,EAAQL,KAAKL,MAAMC,YAEzB,GADAU,QAAQC,IAAIF,GACM,KAAfA,EAAQ1B,KAAU,CACnB,IAAM6B,EAAS,GAAD,mBAAKR,KAAKL,MAAMpB,OAAhB,CAAuB8B,IACrCL,KAAKC,SAAS,CACZ1B,MAAMiC,EACNZ,YAAY,CACVjB,KAAK,GACLG,IAAI,S,wBAKR,SAAWA,GACT,IAAM2B,EAAgBT,KAAKL,MAAMpB,MAAMmC,QAAO,SAAAjC,GAAI,OAAGA,EAAKK,MAAMA,KAChEkB,KAAKC,SAAS,CACd1B,MAAMkC,M,uBAER,SAAU9B,EAAKG,GACb,IAAMP,EAAMyB,KAAKL,MAAMpB,MACvBA,EAAMC,KAAI,SAAAC,GACLA,EAAKK,MAAMA,IACZL,EAAKE,KAAKA,MAGdqB,KAAKC,SAAS,CACd1B,MAAMA,M,oBAGR,WACE,OACE,sBAAKG,UAAU,MAAf,UACA,iCACE,uBAAMG,GAAG,aAAa8B,SAAUX,KAAKD,QAArC,UACE,uBAAOnB,KAAK,OAAOgC,YAAY,aAC/B7B,MAAOiB,KAAKL,MAAMC,YAAYjB,KAC9BK,SAAUgB,KAAKH,cACf,wBAAQjB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWL,MAAOyB,KAAKL,MAAMpB,MAC7Be,WAAYU,KAAKV,WACjBJ,UAAWc,KAAKd,mB,GAnEJ2B,IAAMC,WCETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41282f7f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport './ListItems.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nfunction ListItems(props){\r\n    const items=props.items;\r\n    const listItems=items.map(item =>\r\n        {\r\n            return <div className=\"list\" key={item.key}>\r\n                <p>{item.text}\r\n                <input type=\"text\" id={item.key} value={item.text}\r\n                onChange={(e)=>{props.setUpdate(e.target.value, item.key)}}/>\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon='trash'\r\n                    onClick={()=>props.deleteItem(item.key)}/>\r\n                    </span></p>\r\n            </div>\r\n        })\r\n    return(\r\n        <div>{listItems}</div>\r\n    )\r\n}\r\nexport default ListItems;","import logo from './logo.svg';\nimport './App.css';\nimport reactDom from 'react-dom';\nimport React from 'react';\nimport ListItems from './ListItems';\nimport {library } from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:'',\n      }\n    }\n    this.handleInput=this.handleInput.bind(this);\n    this.addItem=this.addItem.bind(this);\n    this.deleteItem=this.deleteItem.bind(this);\n    this.setUpdate=this.setUpdate.bind(this);\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text:e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n  addItem(e){\ne.preventDefault();\nconst newItem=this.state.currentItem;\nconsole.log(newItem);\nif(newItem.text!==\"\"){\n  const newItems=[...this.state.items, newItem];\n  this.setState({\n    items:newItems,\n    currentItem:{\n      text:'',\n      key:''\n    }\n  })\n}\n  }\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item =>item.key!==key);\n    this.setState({\n    items:filteredItems})\n  }\n  setUpdate(text,key){\n    const items=this.state.items;\n    items.map(item =>{\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n    this.setState({\n    items:items\n  })\n  }\n  render(){\n    return(\n      <div className=\"App\">\n      <header>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter Text\"\n          value={this.state.currentItem.text}\n          onChange={this.handleInput}/>\n          <button type=\"submit\">Add</button>\n        </form>\n      </header>\n      <ListItems items={this.state.items}\n      deleteItem={this.deleteItem}\n      setUpdate={this.setUpdate}></ListItems>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}